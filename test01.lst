                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                              4 ; This file was generated Sun Mar 22 00:08:06 2015
                              5 ;--------------------------------------------------------
                              6 	.module test01
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _setColours
                             14 	.globl _pause
                             15 	.globl _cpc_SetColour
                             16 	.globl _cpc_SetMode
                             17 	.globl _cpc_DisableFirmware
                             18 	.globl _cpc_EnableFirmware
                             19 	.globl _drawSprite_clipping_m0
                             20 	.globl _tintas
                             21 	.globl _heart
                             22 ;--------------------------------------------------------
                             23 ; special function registers
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DATA
                             29 ;--------------------------------------------------------
                             30 ; ram data
                             31 ;--------------------------------------------------------
                             32 	.area _INITIALIZED
   0000                      33 _heart::
   0000                      34 	.ds 17
   0011                      35 _tintas::
   0011                      36 	.ds 17
                             37 ;--------------------------------------------------------
                             38 ; absolute external ram data
                             39 ;--------------------------------------------------------
                             40 	.area _DABS (ABS)
                             41 ;--------------------------------------------------------
                             42 ; global & static initialisations
                             43 ;--------------------------------------------------------
                             44 	.area _HOME
                             45 	.area _GSINIT
                             46 	.area _GSFINAL
                             47 	.area _GSINIT
                             48 ;--------------------------------------------------------
                             49 ; Home
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _HOME
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area _CODE
                             57 ;test01.c:20: void pause(unsigned int p){
                             58 ;	---------------------------------
                             59 ; Function pause
                             60 ; ---------------------------------
   0000                      61 _pause_start::
   0000                      62 _pause:
                             63 ;test01.c:22: for (i=0; i < p; i++) {
   0000 11 00 00      [10]   64 	ld	de,#0x0000
   0003                      65 00103$:
   0003 21 02 00      [10]   66 	ld	hl,#2
   0006 39            [11]   67 	add	hl,sp
   0007 7B            [ 4]   68 	ld	a,e
   0008 96            [ 7]   69 	sub	a, (hl)
   0009 7A            [ 4]   70 	ld	a,d
   000A 23            [ 6]   71 	inc	hl
   000B 9E            [ 7]   72 	sbc	a, (hl)
   000C D0            [11]   73 	ret	NC
                             74 ;test01.c:25: __endasm;
   000D 76            [ 4]   75 	halt
                             76 ;test01.c:22: for (i=0; i < p; i++) {
   000E 13            [ 6]   77 	inc	de
   000F 18 F2         [12]   78 	jr	00103$
   0011 C9            [10]   79 	ret
   0012                      80 _pause_end::
                             81 ;test01.c:33: void setColours()
                             82 ;	---------------------------------
                             83 ; Function setColours
                             84 ; ---------------------------------
   0012                      85 _setColours_start::
   0012                      86 _setColours:
                             87 ;test01.c:36: for (x=0; x<17; x++)
   0012 1E 00         [ 7]   88 	ld	e,#0x00
   0014                      89 00102$:
                             90 ;test01.c:38: cpc_SetColour(x,tintas[x]);
   0014 21r11r00      [10]   91 	ld	hl,#_tintas
   0017 16 00         [ 7]   92 	ld	d,#0x00
   0019 19            [11]   93 	add	hl, de
   001A 66            [ 7]   94 	ld	h,(hl)
   001B D5            [11]   95 	push	de
   001C E5            [11]   96 	push	hl
   001D 33            [ 6]   97 	inc	sp
   001E 7B            [ 4]   98 	ld	a,e
   001F F5            [11]   99 	push	af
   0020 33            [ 6]  100 	inc	sp
   0021 CDr00r00      [17]  101 	call	_cpc_SetColour
   0024 F1            [10]  102 	pop	af
   0025 D1            [10]  103 	pop	de
                            104 ;test01.c:36: for (x=0; x<17; x++)
   0026 1C            [ 4]  105 	inc	e
   0027 7B            [ 4]  106 	ld	a,e
   0028 D6 11         [ 7]  107 	sub	a, #0x11
   002A 38 E8         [12]  108 	jr	C,00102$
   002C C9            [10]  109 	ret
   002D                     110 _setColours_end::
                            111 ;test01.c:42: void main(){
                            112 ;	---------------------------------
                            113 ; Function main
                            114 ; ---------------------------------
   002D                     115 _main_start::
   002D                     116 _main:
                            117 ;test01.c:46: cpc_DisableFirmware();
   002D CDr00r00      [17]  118 	call	_cpc_DisableFirmware
                            119 ;test01.c:48: cpc_SetMode(0);
   0030 AF            [ 4]  120 	xor	a, a
   0031 F5            [11]  121 	push	af
   0032 33            [ 6]  122 	inc	sp
   0033 CDr00r00      [17]  123 	call	_cpc_SetMode
   0036 33            [ 6]  124 	inc	sp
                            125 ;test01.c:50: setColours();
   0037 CDr12r00      [17]  126 	call	_setColours
                            127 ;test01.c:52: cpc_SetColour(17,3);
   003A 21 11 03      [10]  128 	ld	hl,#0x0311
   003D E5            [11]  129 	push	hl
   003E CDr00r00      [17]  130 	call	_cpc_SetColour
   0041 F1            [10]  131 	pop	af
                            132 ;test01.c:54: for (i=5;i<195;i=i+5){
   0042 16 05         [ 7]  133 	ld	d,#0x05
                            134 ;test01.c:55: for (j=3;j<77;j=j+3){
   0044                     135 00109$:
   0044 1E 03         [ 7]  136 	ld	e,#0x03
   0046                     137 00103$:
                            138 ;test01.c:56: drawSprite_clipping_m0(heart,j,i);
   0046 01r00r00      [10]  139 	ld	bc,#_heart
   0049 D5            [11]  140 	push	de
   004A D5            [11]  141 	push	de
   004B C5            [11]  142 	push	bc
   004C CDr00r00      [17]  143 	call	_drawSprite_clipping_m0
   004F F1            [10]  144 	pop	af
   0050 F1            [10]  145 	pop	af
   0051 D1            [10]  146 	pop	de
                            147 ;test01.c:55: for (j=3;j<77;j=j+3){
   0052 1C            [ 4]  148 	inc	e
   0053 1C            [ 4]  149 	inc	e
   0054 1C            [ 4]  150 	inc	e
   0055 7B            [ 4]  151 	ld	a,e
   0056 D6 4D         [ 7]  152 	sub	a, #0x4D
   0058 38 EC         [12]  153 	jr	C,00103$
                            154 ;test01.c:54: for (i=5;i<195;i=i+5){
   005A 7A            [ 4]  155 	ld	a,d
   005B C6 05         [ 7]  156 	add	a, #0x05
   005D 57            [ 4]  157 	ld	d,a
   005E D6 C3         [ 7]  158 	sub	a, #0xC3
   0060 38 E2         [12]  159 	jr	C,00109$
                            160 ;test01.c:61: drawSprite_clipping_m0(heart,-1,100);
   0062 11r00r00      [10]  161 	ld	de,#_heart
   0065 21 FF 64      [10]  162 	ld	hl,#0x64FF
   0068 E5            [11]  163 	push	hl
   0069 D5            [11]  164 	push	de
   006A CDr00r00      [17]  165 	call	_drawSprite_clipping_m0
   006D F1            [10]  166 	pop	af
   006E F1            [10]  167 	pop	af
                            168 ;test01.c:62: drawSprite_clipping_m0(heart,78,100);
   006F 11r00r00      [10]  169 	ld	de,#_heart
   0072 21 4E 64      [10]  170 	ld	hl,#0x644E
   0075 E5            [11]  171 	push	hl
   0076 D5            [11]  172 	push	de
   0077 CDr00r00      [17]  173 	call	_drawSprite_clipping_m0
   007A F1            [10]  174 	pop	af
   007B F1            [10]  175 	pop	af
                            176 ;test01.c:63: drawSprite_clipping_m0(heart,39,-1);
   007C 11r00r00      [10]  177 	ld	de,#_heart
   007F 21 27 FF      [10]  178 	ld	hl,#0xFF27
   0082 E5            [11]  179 	push	hl
   0083 D5            [11]  180 	push	de
   0084 CDr00r00      [17]  181 	call	_drawSprite_clipping_m0
   0087 F1            [10]  182 	pop	af
   0088 F1            [10]  183 	pop	af
                            184 ;test01.c:64: drawSprite_clipping_m0(heart,39,196);
   0089 11r00r00      [10]  185 	ld	de,#_heart
   008C 21 27 C4      [10]  186 	ld	hl,#0xC427
   008F E5            [11]  187 	push	hl
   0090 D5            [11]  188 	push	de
   0091 CDr00r00      [17]  189 	call	_drawSprite_clipping_m0
   0094 F1            [10]  190 	pop	af
   0095 F1            [10]  191 	pop	af
                            192 ;test01.c:65: drawSprite_clipping_m0(heart,-1,-1);
   0096 11r00r00      [10]  193 	ld	de,#_heart
   0099 21 FF FF      [10]  194 	ld	hl,#0xFFFF
   009C E5            [11]  195 	push	hl
   009D D5            [11]  196 	push	de
   009E CDr00r00      [17]  197 	call	_drawSprite_clipping_m0
   00A1 F1            [10]  198 	pop	af
   00A2 F1            [10]  199 	pop	af
                            200 ;test01.c:66: drawSprite_clipping_m0(heart,78,-1);
   00A3 11r00r00      [10]  201 	ld	de,#_heart
   00A6 21 4E FF      [10]  202 	ld	hl,#0xFF4E
   00A9 E5            [11]  203 	push	hl
   00AA D5            [11]  204 	push	de
   00AB CDr00r00      [17]  205 	call	_drawSprite_clipping_m0
   00AE F1            [10]  206 	pop	af
   00AF F1            [10]  207 	pop	af
                            208 ;test01.c:67: drawSprite_clipping_m0(heart,78,196);
   00B0 11r00r00      [10]  209 	ld	de,#_heart
   00B3 21 4E C4      [10]  210 	ld	hl,#0xC44E
   00B6 E5            [11]  211 	push	hl
   00B7 D5            [11]  212 	push	de
   00B8 CDr00r00      [17]  213 	call	_drawSprite_clipping_m0
   00BB F1            [10]  214 	pop	af
   00BC F1            [10]  215 	pop	af
                            216 ;test01.c:68: drawSprite_clipping_m0(heart,-1,196);
   00BD 11r00r00      [10]  217 	ld	de,#_heart
   00C0 21 FF C4      [10]  218 	ld	hl,#0xC4FF
   00C3 E5            [11]  219 	push	hl
   00C4 D5            [11]  220 	push	de
   00C5 CDr00r00      [17]  221 	call	_drawSprite_clipping_m0
   00C8 F1            [10]  222 	pop	af
                            223 ;test01.c:70: pause(5000);
   00C9 21 88 13      [10]  224 	ld	hl, #0x1388
   00CC E3            [19]  225 	ex	(sp),hl
   00CD CDr00r00      [17]  226 	call	_pause
   00D0 F1            [10]  227 	pop	af
                            228 ;test01.c:71: cpc_EnableFirmware();
   00D1 C3r00r00      [10]  229 	jp	_cpc_EnableFirmware
   00D4                     230 _main_end::
                            231 	.area _CODE
                            232 	.area _INITIALIZER
   0000                     233 __xinit__heart:
   0000 03                  234 	.db #0x03	; 3
   0001 05                  235 	.db #0x05	; 5
   0002 50                  236 	.db #0x50	; 80	'P'
   0003 14                  237 	.db #0x14	; 20
   0004 00                  238 	.db #0x00	; 0
   0005 B4                  239 	.db #0xB4	; 180
   0006 3C                  240 	.db #0x3C	; 60
   0007 28                  241 	.db #0x28	; 40
   0008 B4                  242 	.db #0xB4	; 180
   0009 3C                  243 	.db #0x3C	; 60
   000A 28                  244 	.db #0x28	; 40
   000B 14                  245 	.db #0x14	; 20
   000C 3C                  246 	.db #0x3C	; 60
   000D 00                  247 	.db #0x00	; 0
   000E 00                  248 	.db #0x00	; 0
   000F 28                  249 	.db #0x28	; 40
   0010 00                  250 	.db #0x00	; 0
   0011                     251 __xinit__tintas:
   0011 14                  252 	.db #0x14	; 20
   0012 01                  253 	.db #0x01	; 1
   0013 0B                  254 	.db #0x0B	; 11
   0014 09                  255 	.db #0x09	; 9
   0015 0A                  256 	.db #0x0A	; 10
   0016 0E                  257 	.db #0x0E	; 14
   0017 0C                  258 	.db #0x0C	; 12
   0018 1C                  259 	.db #0x1C	; 28
   0019 1A                  260 	.db #0x1A	; 26
   001A 16                  261 	.db #0x16	; 22
   001B 1E                  262 	.db #0x1E	; 30
   001C 13                  263 	.db #0x13	; 19
   001D 1F                  264 	.db #0x1F	; 31
   001E 17                  265 	.db #0x17	; 23
   001F 15                  266 	.db #0x15	; 21
   0020 10                  267 	.db #0x10	; 16
   0021 14                  268 	.db #0x14	; 20
                            269 	.area _CABS (ABS)
